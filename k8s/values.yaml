global:
  appName: "streamhouse"
  networkPolicy:
    enabled: false

namespaces:
  system: "streamhouse-system"
  data: "streamhouse-data"
  monitoring: "streamhouse-monitoring"

kafka:
  enabled: true
  image:
    repository: "bitnami/kafka"
    tag: "4.0.0-debian-12-r0"
    pullPolicy: IfNotPresent
  replicas: 3
  persistence:
    enabled: true
    size: 5Gi
    storageClass: standard
  service:
    type: ClusterIP
    port: 9092
  config:
    numPartitions: 3
    replicationFactor: 3
    minInSyncReplicas: 2

#flink:
#  enabled: true
#  jobmanager:
#    replicas: 1
#    service:
#      type: ClusterIP
#      port: 8081
#  taskmanager:
#    replicas: 1
#    slots: 8
#  sqlClient:
#    enabled: true

postgres:
  image:
    repository: postgres
    tag: "15.4-alpine"
    pullPolicy: IfNotPresent
  auth:
    postgresUser: phamviethoa
    postgresPassword: streamhouse-postgres
    postgresDB: banking-system
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  persistence:
    enabled: true
    size: 30Gi
    storageClass: standard
    accessModes:
      - ReadWriteOnce
  service:
    type: ClusterIP
    port: 5432

minio:
  enabled: true
  image:
    repository: minio/minio
    tag: "latest"
    pullPolicy: IfNotPresent
  mode:
    type: distributed
    replicas: 4
  auth:
    rootUser: minio-admin
    rootPassword: minio-password
  persistence:
    enabled: true
    size: 5Gi
    storageClass: standard
  service:
    type: ClusterIP
    ports:
      api: 9000
      console: 9001
  config:
    region: ap-southeast-1
    browser: "on"
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

starrocks:
  auth:
    enabled: true
    user: starrocks
    password: streamhouse-starrocks

  frontend:
    image:
      repository: starrocks/fe-ubuntu
      tag: "latest"
      pullPolicy: IfNotPresent
    replicas: 3
    resources:
      requests:
        memory: 2Gi
        cpu: 500m
      limits:
        memory: 4Gi
        cpu: 1000m
    persistence:
      enabled: true
      size: 15Gi
      storageClass: standard
    service:
      type: ClusterIP
      ports:
        http: 8030
        query: 9030
        rpc: 9020

  backend:
    image:
      repository: starrocks/be-ubuntu
      tag: "latest"
      pullPolicy: IfNotPresent
    replicas: 3
    resources:
      requests:
        memory: 4Gi
        cpu: 1000m
      limits:
        memory: 8Gi
        cpu: 2000m
    persistence:
      enabled: true
      size: 30Gi
      storageClass: standard
    service:
      type: ClusterIP
      ports:
        http: 8060
        rpc: 8040
        heartbeat: 9050
  probe:
    readiness:
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
    liveness:
      initialDelaySeconds: 300
      periodSeconds: 10
      timeoutSeconds: 10
      failureThreshold: 3

  bootstrap:
    enabled: true
    waitInterval: 10
    maxAttempts: 60

trino:
  enabled: true
  coordinator:
    replicas: 1
    resources:
      requests:
        memory: 1Gi
        cpu: 500m
      limits:
        memory: 2Gi
        cpu: 1000m
  worker:
    replicas: 3
    resources:
      requests:
        memory: 2Gi
        cpu: 1000m
      limits:
        memory: 4Gi
        cpu: 2000m
  image:
    repository: trinodb/trino
    tag: 475
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    ports:
      http: 8080
  probe:
    readiness:
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
    liveness:
      initialDelaySeconds: 300
      periodSeconds: 10
      timeoutSeconds: 10
      failureThreshold: 3