---
# Source: streamhouse/templates/starrocks/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: starrocks-secret
  namespace: streamhouse-data
  labels:
    app: streamhouse
    component: starrocks
type: Opaque
data:
  STARROCKS_ADMIN_USER: "c3RhcnJvY2tz"
  STARROCKS_ADMIN_PASSWORD: "c3RyZWFtaG91c2Utc3RhcnJvY2tz"
---
# Source: streamhouse/templates/starrocks/bootstrap-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: starrocks-bootstrap
  namespace: streamhouse-data
  labels:
    app: streamhouse
    component: starrocks
data:
  bootstrap.sh: |
    #!/usr/bin/env bash
    set -euo pipefail

    FE_HOST="starrocks-fe-0.starrocks-fe-headless.streamhouse-data.svc.cluster.local"
    MYSQL_PORT=""
    USER="starrocks"
    PASSWORD="streamhouse-starrocks"

    echo "Waiting for StarRocks FE to be ready..."
    until mysql -h ${FE_HOST} -P ${MYSQL_PORT} -u${USER} -p${PASSWORD} -e "SHOW FRONTENDS;" >/dev/null 2>&1; do
      sleep 5
    done

    echo "FE is ready. Starting bootstrap process..."
    for i in $(seq 1 $((3-1))); do
      FE_FOLLOWER="starrocks-fe-${i}.starrocks-fe-headless.streamhouse-data.svc.cluster.local"
      mysql -h ${FE_HOST} -P ${MYSQL_PORT} -u${USER} -p${PASSWORD} -e "ALTER SYSTEM ADD FOLLOWER \"${FE_FOLLOWER}:${MYSQL_PORT}\";" || true
    done

    echo "Registering StarRocks BE nodes..."
    for i in $(seq 0 $((3-1))); do
      BE_HOST="starrocks-be-${i}.starrocks-be-headless.streamhouse-data.svc.cluster.local"
      mysql -h ${FE_HOST} -P ${MYSQL_PORT} -u${USER} -p${PASSWORD} -e "ALTER SYSTEM ADD BACKEND \"${BE_HOST}:9050\";" || true
    done

    echo "StarRocks bootstrap completed successfully."
---
# Source: streamhouse/templates/starrocks/bootstrap-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: starrocks-bootstrap
  namespace: streamhouse-data
  labels:
    app: streamhouse
    component: starrocks-bootstrap
spec:
  backoffLimit: 5
  template:
    metadata:
      labels:
        app: streamhouse
        component: starrocks-bootstrap
    spec:
      restartPolicy: OnFailure
      containers:
        - name: bootstrap
          image: mysql:8.0
          command: ["/bin/bash", "/scripts/bootstrap.sh"]
          env:
            - name: STARROCKS_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: starrocks-secret
                  key: STARROCKS_ADMIN_USER
            - name: STARROCKS_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: starrocks-secret
                  key: STARROCKS_ADMIN_PASSWORD
          volumeMounts:
            - name: bootstrap-scripts
              mountPath: /scripts
      volumes:
        - name: bootstrap-scripts
          configMap:
            name: starrocks-bootstrap
            defaultMode: 0755
---
# Source: streamhouse/templates/starrocks/fe/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: starrocks-fe
  namespace: streamhouse-data
  labels:
    app: streamhouse
    component: starrocks-fe
spec:
  type: ClusterIP
  selector:
    app: streamhouse
    component: starrocks-fe
  ports:
    - name: http
      port: 8030
      targetPort: 8030
    - name: mysql
      port: 9030
      targetPort: 9030
    - name: rpc
      port: 9020
      targetPort: 9020
---
# Source: streamhouse/templates/starrocks/fe/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: starrocks-fe-headless
  namespace: streamhouse-data
  labels:
    app: streamhouse
    component: starrocks-fe
spec:
  clusterIP: None
  selector:
    app: streamhouse
    component: starrocks-fe
  ports:
    - name: http
      port: 8030
      targetPort: 8030
    - name: mysql
      port: 9030
      targetPort: 9030
    - name: rpc
      port: 9020
      targetPort: 9020
---
# Source: streamhouse/templates/starrocks/fe/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: starrocks-fe
  namespace: streamhouse-data
  labels:
      app: streamhouse
      component: starrocks-fe
spec:
  serviceName: starrocks-fe-headless
  replicas: 3
  selector:
    matchLabels:
      app: streamhouse
      component: starrocks-fe
  template:
    metadata:
      labels:
        app: streamhouse
        component: starrocks-fe
    spec:
      containers:
        - name: starrocks-fe
          image: starrocks/fe-ubuntu:latest
          imagePullPolicy: IfNotPresent
          command: [ "/opt/starrocks/fe/bin/start_fe.sh" ]
          args:
            - "--query_port=9030"
            - "--http_port=8030"
            - "--rpc_port=9020"
          ports:
            - name: http
              containerPort: 8030
            - name: mysql
              containerPort: 9030
            - name: rpc
              containerPort: 9020
          env:
            - name: STARROCKS_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: starrocks-secret
                  key: STARROCKS_ADMIN_USER
            - name: STARROCKS_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: starrocks-secret
                  key: STARROCKS_ADMIN_PASSWORD
            - name: FE_HTTP_PORT
              value: "8030"
            - name: FE_RPC_PORT
              value: "9020"
            - name: FE_QUERY_PORT
              value: "9030"
          readinessProbe:
            tcpSocket:
              port: 9030
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            tcpSocket:
              port: 9030
            initialDelaySeconds: 300
            periodSeconds: 10
            failureThreshold: 3
          resources:
            
            limits:
              cpu: 1000m
              memory: 4Gi
            requests:
              cpu: 500m
              memory: 2Gi
          volumeMounts:
            - name: starrocks-fe-storage
              mountPath: /opt/starrocks/fe/meta
  volumeClaimTemplates:
    - metadata:
        name: starrocks-fe-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: standard
        resources:
          requests:
            storage: 15Gi
---
# Source: streamhouse/templates/starrocks/be/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: starrocks-be-headless
  namespace: streamhouse-data
  labels:
    app: streamhouse
    component: starrocks-be
spec:
  clusterIP: None
  selector:
    app: streamhouse
    component: starrocks-be
  ports:
    - name: http
      port: 8060
      targetPort: 8060
    - name: rpc
      port: 8040
      targetPort: 8040
    - name: heartbeat
      port: 9050
      targetPort: 9050
---
# Source: streamhouse/templates/starrocks/be/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: starrocks-be
  namespace: streamhouse-data
  labels:
    app: streamhouse
    component: starrocks-be
spec:
  serviceName: starrocks-be-headless
  replicas: 3
  selector:
    matchLabels:
      app: streamhouse
      component: starrocks-be
  template:
    metadata:
      labels:
        app: streamhouse
        component: starrocks-be
    spec:
      containers:
        - name: starrocks-be
          image: starrocks/be-ubuntu:latest
          imagePullPolicy: IfNotPresent
          command: [ "/bin/bash", "-c" ]
          args:
              - >
                /opt/starrocks/be/bin/start_be.sh --daemon &&
                tail -f /opt/starrocks/be/log/be.out
          ports:
            - name: http
              containerPort: 8060
            - name: rpc
              containerPort: 8040
            - name: heartbeat
              containerPort: 9050
          readinessProbe:
            tcpSocket:
              port: 8040
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8040
            initialDelaySeconds: 300
            periodSeconds: 10
          resources:
            
            limits:
              cpu: 2000m
              memory: 8Gi
            requests:
              cpu: 1000m
              memory: 4Gi
          volumeMounts:
            - name: starrocks-be-storage
              mountPath: /opt/starrocks/be/storage
  volumeClaimTemplates:
    - metadata:
        name: starrocks-be-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: standard
        resources:
          requests:
            storage: 30Gi
