---
# Source: streamhouse/templates/kafka/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kafka-headless
  namespace: streamhouse-system
  labels:
    app: streamhouse
    component: kafka
spec:
  clusterIP: None
  ports:
    - name: broker
      port: 9092
      targetPort: 9092
    - name: controller
      port: 9093
      targetPort: 9093
  selector:
    app: streamhouse
    component: kafka
---
# Source: streamhouse/templates/kafka/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  labels:
    app: streamhouse
    component: kafka
spec:
  type: ClusterIP
  ports:
    - name: broker
      port: 9092
      targetPort: 9092
  selector:
    app: streamhouse
    component: kafka
---
# Source: streamhouse/templates/kafka/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: streamhouse-system
  labels:
    app: streamhouse
    component: kafka
spec:
  serviceName: kafka-headless
  replicas: 3
  selector:
    matchLabels:
      app: streamhouse
      component: kafka
  template:
    metadata:
      labels:
        app: streamhouse
        component: kafka
    spec:
      containers:
        - name: kafka
          image: confluentinc/cp-kafka:7.6.6
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9092
              name: broker
            - containerPort: 9093
              name: controller
          command: [ "sh", "-c" ]
          args:
            - |
              export KAFKA_NODE_ID=$(hostname | awk -F'-' '{print $NF}');
              exec /etc/confluent/docker/run
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CLUSTER_ID
              value: "V9QT8q2XR1aMR_udoY14hw"
            - name: KAFKA_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_NODE_ID
              value: "$(MY_POD_NAME##*-)"
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: "0@kafka-0.kafka-headless.streamhouse-system.svc.cluster.local:9093,1@kafka-1.kafka-headless.streamhouse-system.svc.cluster.local:9093,2@kafka-2.kafka-headless.streamhouse-system.svc.cluster.local:9093"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://:9092,CONTROLLER://:9093"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://$(MY_POD_NAME).kafka-headless.streamhouse-system.svc.cluster.local:9092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_NUM_PARTITIONS
              value: "3"
            - name: KAFKA_DEFAULT_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "2"
            - name: KAFKA_MIN_IN_SYNC_REPLICAS
              value: "2"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
          volumeMounts:
            - name: data
              mountPath: /var/lib/kafka/data
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 5Gi
