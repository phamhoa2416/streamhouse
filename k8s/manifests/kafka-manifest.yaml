#---
## Source: streamhouse/templates/kafka/service.yaml
#apiVersion: v1
#kind: Service
#metadata:
#  name: kafka
#  namespace: streamhouse-data
#  labels:
#    app: streamhouse
#    component: kafka
#spec:
#  type: ClusterIP
#  ports:
#    - name: external
#      port: 9092
#      targetPort: 9092
#    - name: plaintext
#      port: 29092
#      targetPort: 29092
#    - name: controller
#      port: 29093
#      targetPort: 29093
#  selector:
#    app: streamhouse
#    component: kafka
#---
## Source: streamhouse/templates/kafka/service.yaml
#apiVersion: v1
#kind: Service
#metadata:
#  name: kafka-headless
#  namespace: streamhouse-data
#  labels:
#    app: streamhouse
#    component: kafka
#spec:
#  clusterIP: None
#  selector:
#    app: streamhouse
#    component: kafka
#  ports:
#    - name: external
#      port: 9092
#      targetPort: 9092
#    - name: plaintext
#      port: 29092
#      targetPort: 29092
#    - name: controller
#      port: 29093
#      targetPort: 29093
#---
## Source: streamhouse/templates/kafka/statefulset.yaml
#apiVersion: apps/v1
#kind: StatefulSet
#metadata:
#  name: kafka
#  namespace: streamhouse-data
#  labels:
#    app: streamhouse
#    component: kafka
#spec:
#  serviceName: kafka-headless
#  replicas: 3
#  selector:
#    matchLabels:
#      app: streamhouse
#      component: kafka
#  template:
#    metadata:
#      labels:
#        app: streamhouse
#        component: kafka
#    spec:
#      securityContext:
#        fsGroup: 1000
#        runAsUser: 1000
#      containers:
#        - name: kafka
#          image: "bitnami/kafka:4.0.0-debian-12-r0"
#          imagePullPolicy: IfNotPresent
#          env:
#            - name: MY_POD_NAME
#              valueFrom:
#                fieldRef:
#                  fieldPath: metadata.name
#            - name: KAFKA_CFG_PROCESS_ROLES
#              value: "broker,controller"
#            - name: KAFKA_CFG_NODE_ID
#              value: "$(MY_POD_NAME##*-)"
#            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
#              value: "0@kafka-0.kafka-headless.streamhouse-data.svc.cluster.local:29093,1@kafka-1.kafka-headless.streamhouse-data.svc.cluster.local:29093,2@kafka-2.kafka-headless.streamhouse-data.svc.cluster.local:29093"
#            - name: KAFKA_CFG_LISTENERS
#              value: "PLAINTEXT://:29092,CONTROLLER://:29093,EXTERNAL://:9092"
#            - name: KAFKA_CFG_ADVERTISED_LISTENERS
#              value: "PLAINTEXT://$(MY_POD_NAME).kafka-headless.streamhouse-data.svc.cluster.local:29092,EXTERNAL://$(MY_POD_NAME).kafka-headless.streamhouse-data.svc.cluster.local:9092"
#            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
#              value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT"
#            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
#              value: "CONTROLLER"
#            - name: KAFKA_CFG_NUM_PARTITIONS
#              value: "3"
#            - name: KAFKA_CFG_DEFAULT_REPLICATION_FACTOR
#              value: "3"
#            - name: KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR
#              value: "3"
#            - name: KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
#              value: "3"
#            - name: KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR
#              value: "2"
#            - name: KAFKA_CFG_MIN_IN_SYNC_REPLICAS
#              value: "2"
#            - name: KAFKA_CFG_LOG_DIRS
#              value: "/bitnami/kafka/data"
#            - name: KAFKA_CFG_LOG_RETENTION_HOURS
#              value: "168"
#            - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
#              value: "true"
#          ports:
#            - containerPort: 9092
#              name: external
#            - containerPort: 29092
#              name: plaintext
#            - containerPort: 29093
#              name: controller
#          livenessProbe:
#            exec:
#              command:
#                - sh
#                - -c
#                - "/opt/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server localhost:29092"
#            initialDelaySeconds: 60
#            periodSeconds: 30
#            timeoutSeconds: 10
#            failureThreshold: 3
#          readinessProbe:
#            exec:
#              command:
#                - sh
#                - -c
#                - "/opt/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server localhost:29092"
#            initialDelaySeconds: 30
#            periodSeconds: 15
#            timeoutSeconds: 10
#            failureThreshold: 3
#          volumeMounts:
#            - name: kafka-data
#              mountPath: /bitnami/kafka/data
#          resources:
#            requests:
#              cpu: 500m
#              memory: 1Gi
#            limits:
#              cpu: 1000m
#              memory: 2Gi
#  volumeClaimTemplates:
#    - metadata:
#        name: kafka-data
#      spec:
#        accessModes: [ "ReadWriteOnce" ]
#        storageClassName: standard
#        resources:
#          requests:
#            storage: 5Gi
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: streamhouse-data
  labels:
    app: kafka
spec:
  serviceName: kafka-headless
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: bitnami/kafka:3.7.0
          ports:
            - name: kafka
              containerPort: 9092
            - name: controller
              containerPort: 9093
          env:
            - name: KAFKA_CFG_NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KAFKA_CFG_PROCESS_ROLES
              value: broker,controller
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              value: CONTROLLER
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: "0@kafka-0.kafka-headless.streamhouse-data.svc.cluster.local:9093,1@kafka-1.kafka-headless.streamhouse-data.svc.cluster.local:9093,2@kafka-2.kafka-headless.streamhouse-data.svc.cluster.local:9093"

            # (1) Advertised listeners
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: PLAINTEXT://kafka-0.kafka-headless.streamhouse-data.svc.cluster.local:9092

            # (2) Listeners
            - name: KAFKA_CFG_LISTENERS
              value: PLAINTEXT://:9092,CONTROLLER://:9093

            # (3) Listener security protocol map
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT

            # (4) Inter-broker listener
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: PLAINTEXT
          command:
            - sh
            - -c
            - |
              export KAFKA_BROKER_ID=$(hostname | awk -F'-' '{print $NF}')
          volumeMounts:
            - name: data
              mountPath: /bitnami/kafka
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 5Gi
