apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: starrocks-be
  namespace: {{ .Values.namespaces.data }}
  labels:
    app: {{ .Values.global.appName }}
    component: starrocks-be
spec:
  serviceName: starrocks-be-headless
  replicas: {{ .Values.starrocks.backend.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.global.appName }}
      component: starrocks-be
  template:
    metadata:
      labels:
        app: {{ .Values.global.appName }}
        component: starrocks-be
    spec:
      containers:
        - name: starrocks-be
          image: {{ .Values.starrocks.backend.image.repository }}:{{ .Values.starrocks.backend.image.tag }}
          imagePullPolicy: {{ .Values.starrocks.backend.image.pullPolicy }}
          command: [ "/bin/bash", "-c" ]
          args:
              - >
                /opt/starrocks/be/bin/start_be.sh --daemon &&
                tail -f /opt/starrocks/be/log/be.out
          ports:
            - name: http
              containerPort: {{ .Values.starrocks.backend.service.ports.http }}
            - name: rpc
              containerPort: {{ .Values.starrocks.backend.service.ports.rpc }}
            - name: heartbeat
              containerPort: {{ .Values.starrocks.backend.service.ports.heartbeat }}
          readinessProbe:
            tcpSocket:
              port: 8040
            initialDelaySeconds: {{ .Values.starrocks.probe.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.starrocks.probe.readiness.periodSeconds }}
          livenessProbe:
            tcpSocket:
              port: 8040
            initialDelaySeconds: {{ .Values.starrocks.probe.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.starrocks.probe.liveness.periodSeconds }}
          resources:
            {{ toYaml .Values.starrocks.backend.resources | nindent 12 }}
          volumeMounts:
            - name: starrocks-be-storage
              mountPath: /opt/starrocks/be/storage
  volumeClaimTemplates:
    - metadata:
        name: starrocks-be-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        {{- if .Values.starrocks.backend.persistence.storageClass }}
        storageClassName: {{ .Values.starrocks.backend.persistence.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.starrocks.backend.persistence.size }}