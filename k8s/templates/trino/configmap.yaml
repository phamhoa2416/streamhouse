apiVersion: v1
kind: ConfigMap
metadata:
  name: trino-config
  namespace: {{ .Values.namespaces.data }}
  labels:
    app: streamhouse
    component: trino
data:
  jvm.config: |
    -Xmx2G
    -XX:+ExitOnOutOfMemoryError
    -XX:+UseG1GC
    -XX:+UseStringDeduplication
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:HeapDumpPath=/tmp
  log.properties: |
    io.trino=INFO
    io.trino.plugin.jdbc=DEBUG
    io.trino.plugin.hive=DEBUG
    io.trino.plugin.iceberg=DEBUG

  coordinator.properties: |
    coordinator=true
    node-scheduler.include-coordinator=false
    node.environment=production
    http-server.http.port=8080
    query.max-memory=5GB
    query.max-memory-per-node=1GB
    discovery.uri=http://trino:8080

    fs.native-s3.enabled=true
    s3.endpoint=http://minio:9000
    s3.region={{ .Values.minio.config.region }}
    s3.path-style-access=true
    s3.ssl.enabled=false
    s3.access-key=${S3_ACCESS_KEY}
    s3.secret-key=${S3_SECRET_KEY}

  worker.properties: |
    coordinator=false
    http-server.http.port=8080
    node.environment=production
    query.max-memory=5GB
    query.max-memory-per-node=1GB
    discovery.uri=http://trino:8080

    fs.native-s3.enabled=true
    s3.endpoint=http://minio:9000
    s3.region={{ .Values.minio.config.region }}
    s3.path-style-access=true
    s3.ssl.enabled=false
    s3.access-key=${S3_ACCESS_KEY}
    s3.secret-key=${S3_SECRET_KEY}

  minio.properties: |
    connector.name=iceberg
    iceberg.catalog.type=rest
    iceberg.rest-catalog.uri=http://polaris:8181
    iceberg.rest-catalog.warehouse=s3a://warehouse
    iceberg.file-format=parquet