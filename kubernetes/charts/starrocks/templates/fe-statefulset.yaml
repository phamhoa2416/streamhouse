apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: starrocks-fe
  namespace: {{ .Values.global.namespaces.data }}
  labels:
    app: starrocks
    component: frontend
spec:
  serviceName: starrocks-fe-headless
  replicas: {{ .Values.starrocks.frontend.replicas }}
  selector:
    matchLabels:
      app: starrocks
      component: frontend
  template:
    metadata:
      labels:
        app: starrocks
        component: frontend
    spec:
      initContainers:
        - name: wait-for-dns
          image: busybox:1.28
          command: ['sh', '-c', 'until nslookup starrocks-fe-headless.{{ .Values.global.namespaces.data }}.svc.cluster.local; do echo waiting for DNS; sleep 2; done']
      containers:
        - name: starrocks-fe
          image: "{{ .Values.starrocks.frontend.image.repository }}:{{ .Values.starrocks.frontend.image.tag }}"
          imagePullPolicy: {{ .Values.starrocks.frontend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.starrocks.frontend.service.ports.http }}
            - name: mysql
              containerPort: {{ .Values.starrocks.frontend.service.ports.query }}
            - name: rpc
              containerPort: {{ .Values.starrocks.frontend.service.ports.rpc }}
            - name: editlog
              containerPort: {{ .Values.starrocks.frontend.service.ports.edit_log }}
          env:
            - name: FE_SERVERS
              value: "starrocks-fe-0.starrocks-fe-headless:9020,starrocks-fe-1.starrocks-fe-headless:9020"
            - name: FE_ID
              value: "1"
            - name: JAVA_OPTS
              value: "-Xms{{ .Values.starrocks.frontend.resources.requests.memory | replace "Gi" "g" | replace "Mi" "m" }} -Xmx{{ .Values.starrocks.frontend.resources.limits.memory | replace "Gi" "g" | replace "Mi" "m" }} -XX:+UseG1GC"
          startupProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - 'curl -f http://localhost:{{ .Values.starrocks.frontend.service.ports.http }}/api/health || exit 1'
            failureThreshold: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/health
              port: {{ .Values.starrocks.frontend.service.ports.http }}
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
          livenessProbe:
            httpGet:
              path: /api/health
              port: {{ .Values.starrocks.frontend.service.ports.http }}
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
          volumeMounts:
            - mountPath: /opt/starrocks/fe/meta
              name: data
            - mountPath: /opt/starrocks/fe/conf/fe.conf
              name: fe-config
              subPath: fe.conf
            - mountPath: /opt/starrocks/fe/log
              name: logs
          resources: {{ toYaml .Values.starrocks.frontend.resources | nindent 12 }}
      volumes:
        - name: fe-config
          configMap:
            name: starrocks-fe-config
            items:
              - key: fe.conf
                path: fe.conf
        - name: logs
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.starrocks.frontend.persistence.storageClass }}
        resources:
          requests:
            storage: {{ .Values.starrocks.frontend.persistence.size }}