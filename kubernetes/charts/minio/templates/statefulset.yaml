apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  namespace: {{ .Values.global.namespaces.data }}
  labels:
    app: minio
spec:
  serviceName: minio-headless
  replicas: {{ .Values.minio.mode.replicas }}
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: "{{ .Values.minio.image.repository }}:{{ .Values.minio.image.tag }}"
          imagePullPolicy: {{ .Values.minio.image.pullPolicy }}
          args:
            - server
            {{- range $i, $e := until (int .Values.minio.mode.replicas) }}
            - http://minio-{{ $i }}.minio-headless.{{ $.Values.global.namespaces.data }}.svc.cluster.local/data
            {{- end }}
            - --console-address
            - ":9001"
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: rootUser
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: rootPassword
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: accessKey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: secretKey
            - name: MINIO_REGION_NAME
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: region
          ports:
            - containerPort: {{ .Values.minio.service.ports.api }}
              name: api
            - containerPort: {{ .Values.minio.service.ports.console }}
              name: console
          resources: {{ toYaml .Values.minio.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: {{ .Values.minio.service.ports.api }}
            initialDelaySeconds: 30
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: {{ .Values.minio.service.ports.api }}
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: data
              mountPath: /data
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: standard
        resources:
          requests:
            storage: {{ .Values.minio.persistence.size }}