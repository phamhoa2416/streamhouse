apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: trino-coordinator
  namespace: {{ .Values.global.namespaces.system }}
  labels:
    app: trino
    component: coordinator
spec:
  replicas: {{ .Values.trino.coordinator.replicas }}
  selector:
    matchLabels:
      app: trino
      component: coordinator
  template:
    metadata:
      labels:
        app: trino
        component: coordinator
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: trino-coordinator
          image: "{{ .Values.trino.image.repository }}:{{ .Values.trino.image.tag }}"
          imagePullPolicy: {{ .Values.trino.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.trino.service.ports.http }}
              name: http
          env:
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: trino-secret
                  key: access-key
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: trino-secret
                  key: secret-key
          readinessProbe:
            httpGet:
              port: {{ .Values.trino.service.ports.http }}
              path: /v1/info
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              port: {{ .Values.trino.service.ports.http }}
              path: /v1/info
            initialDelaySeconds: 60
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 5
          resources: {{ toYaml .Values.trino.coordinator.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /etc/trino
              name: config
            - mountPath: /var/trino/data
              name: data
      volumes:
        - name: config
          configMap:
            name: trino-config
            items:
              - key: jvm.config
                path: jvm.config
              - key: log.properties
                path: log.properties
              - key: coordinator.properties
                path: config.properties
              - key: coordinator.node.properties
                path: node.properties
              - key: paimon.properties
                path: catalog/paimon.properties
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: {{ .Values.trino.persistence.storageClass }}
        resources:
          requests:
            storage: {{ .Values.trino.persistence.size }}
