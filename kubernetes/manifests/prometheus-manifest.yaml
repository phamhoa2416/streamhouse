---
# Source: streamhouse/templates/prometheus/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: streamhouse-monitoring
  labels:
    app: streamhouse
    component: prometheus
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      - job_name: 'kubelet'
        scheme: https
        kubernetes_sd_configs:
          - role: node
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)

      - job_name: 'kubelet-cadvisor'
        scheme: https
        kubernetes_sd_configs:
          - role: node
        metrics_path: /metrics/cadvisor
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)

      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: "true"
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
---
# Source: streamhouse/templates/prometheus/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: streamhouse-monitoring
  labels:
    app: streamhouse
    component: prometheus
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9090
      targetPort: 9090
  selector:
    app: streamhouse
    component: prometheus
---
# Source: streamhouse/templates/prometheus/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service-headless
  namespace: streamhouse-monitoring
  labels:
    app: streamhouse
    component: prometheus
spec:
  clusterIP: None
  ports:
    - name: http
      port: 9090
      targetPort: 9090
  selector:
    app: streamhouse
    component: prometheus
---
# Source: streamhouse/templates/prometheus/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: prometheus-service-monitor
  namespace: streamhouse-monitoring
  labels:
    release: prometheus
spec:
  selector:
    matchLabels:
      app: streamhouse
      component: prometheus
  namespaceSelector:
    matchNames:
      - streamhouse-system
      - streamhouse-data
  endpoints:
    - port: http
      interval: 15s
---
# Source: streamhouse/templates/prometheus/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
  namespace: streamhouse-monitoring
  labels:
    app: streamhouse
    component: prometheus
spec:
  serviceName: prometheus-service-headless
  replicas: 1
  selector:
    matchLabels:
      app: streamhouse
      component: prometheus
  template:
    metadata:
      labels:
        app: streamhouse
        component: prometheus
    spec:
      securityContext:
        fsGroup: 65534
      containers:
        - name: prometheus
          image: "prom/prometheus:v2.51.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9090
          args:
            - "--storage.tsdb.path=/prometheus"
            - "--web.enable-lifecycle"
            - "--config.file=/etc/prometheus/prometheus.yml"
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus/prometheus.yml
              subPath: prometheus.yml
            - name: prometheus-data
              mountPath: /prometheus
          resources: 
            limits:
              cpu: 1000m
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1Gi
      volumes:
        - name: config
          configMap:
            name: prometheus-config
  volumeClaimTemplates:
    - metadata:
        name: prometheus-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Gi
        storageClassName: standard
